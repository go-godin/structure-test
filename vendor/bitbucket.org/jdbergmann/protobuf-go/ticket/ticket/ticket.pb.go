// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ticket/ticket/ticket.proto

package ticket

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReferenceType int32

const (
	ReferenceType_WITHOUT  ReferenceType = 0
	ReferenceType_ADVERT   ReferenceType = 1
	ReferenceType_BUILDING ReferenceType = 2
	ReferenceType_GROUP    ReferenceType = 3
)

var ReferenceType_name = map[int32]string{
	0: "WITHOUT",
	1: "ADVERT",
	2: "BUILDING",
	3: "GROUP",
}

var ReferenceType_value = map[string]int32{
	"WITHOUT":  0,
	"ADVERT":   1,
	"BUILDING": 2,
	"GROUP":    3,
}

func (x ReferenceType) String() string {
	return proto.EnumName(ReferenceType_name, int32(x))
}

func (ReferenceType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{0}
}

type Source int32

const (
	Source_UNDEFINED_SOURCE Source = 0
	Source_MAIL             Source = 1
	Source_PHONE            Source = 2
	Source_OTHER            Source = 3
)

var Source_name = map[int32]string{
	0: "UNDEFINED_SOURCE",
	1: "MAIL",
	2: "PHONE",
	3: "OTHER",
}

var Source_value = map[string]int32{
	"UNDEFINED_SOURCE": 0,
	"MAIL":             1,
	"PHONE":            2,
	"OTHER":            3,
}

func (x Source) String() string {
	return proto.EnumName(Source_name, int32(x))
}

func (Source) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{1}
}

type Status int32

const (
	Status_OPEN        Status = 0
	Status_IN_PROGRESS Status = 1
	Status_DONE        Status = 2
)

var Status_name = map[int32]string{
	0: "OPEN",
	1: "IN_PROGRESS",
	2: "DONE",
}

var Status_value = map[string]int32{
	"OPEN":        0,
	"IN_PROGRESS": 1,
	"DONE":        2,
}

func (x Status) String() string {
	return proto.EnumName(Status_name, int32(x))
}

func (Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{2}
}

type Type int32

const (
	Type_UNDEFINED_TYPE Type = 0
	Type_DAMAGE         Type = 1
)

var Type_name = map[int32]string{
	0: "UNDEFINED_TYPE",
	1: "DAMAGE",
}

var Type_value = map[string]int32{
	"UNDEFINED_TYPE": 0,
	"DAMAGE":         1,
}

func (x Type) String() string {
	return proto.EnumName(Type_name, int32(x))
}

func (Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{3}
}

type Priority int32

const (
	Priority_DEFAULT Priority = 0
	Priority_LOW     Priority = 1
	Priority_HIGH    Priority = 2
)

var Priority_name = map[int32]string{
	0: "DEFAULT",
	1: "LOW",
	2: "HIGH",
}

var Priority_value = map[string]int32{
	"DEFAULT": 0,
	"LOW":     1,
	"HIGH":    2,
}

func (x Priority) String() string {
	return proto.EnumName(Priority_name, int32(x))
}

func (Priority) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{4}
}

type Ticket struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The owner of the ticket
	AccountId      int64      `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Reference      *Reference `protobuf:"bytes,3,opt,name=reference,proto3" json:"reference,omitempty"`
	Source         Source     `protobuf:"varint,4,opt,name=source,proto3,enum=coozzy.ticket.ticket.Source" json:"source,omitempty"`
	Type           Type       `protobuf:"varint,5,opt,name=type,proto3,enum=coozzy.ticket.ticket.Type" json:"type,omitempty"`
	Status         Status     `protobuf:"varint,6,opt,name=status,proto3,enum=coozzy.ticket.ticket.Status" json:"status,omitempty"`
	Title          string     `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`
	Description    string     `protobuf:"bytes,8,opt,name=description,proto3" json:"description,omitempty"`
	MediaIds       []string   `protobuf:"bytes,9,rep,name=mediaIds,proto3" json:"mediaIds,omitempty"`
	AppointmentIds []string   `protobuf:"bytes,10,rep,name=appointmentIds,proto3" json:"appointmentIds,omitempty"`
	Priority       Priority   `protobuf:"varint,11,opt,name=priority,proto3,enum=coozzy.ticket.ticket.Priority" json:"priority,omitempty"`
	// UNIX timestamp in seconds
	DueDate              int64             `protobuf:"varint,12,opt,name=dueDate,proto3" json:"dueDate,omitempty"`
	Assignee             *Assignee         `protobuf:"bytes,13,opt,name=assignee,proto3" json:"assignee,omitempty"`
	InvolvedPersons      []*InvolvedPerson `protobuf:"bytes,14,rep,name=involvedPersons,proto3" json:"involvedPersons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Ticket) Reset()         { *m = Ticket{} }
func (m *Ticket) String() string { return proto.CompactTextString(m) }
func (*Ticket) ProtoMessage()    {}
func (*Ticket) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{0}
}

func (m *Ticket) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Ticket.Unmarshal(m, b)
}
func (m *Ticket) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Ticket.Marshal(b, m, deterministic)
}
func (m *Ticket) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Ticket.Merge(m, src)
}
func (m *Ticket) XXX_Size() int {
	return xxx_messageInfo_Ticket.Size(m)
}
func (m *Ticket) XXX_DiscardUnknown() {
	xxx_messageInfo_Ticket.DiscardUnknown(m)
}

var xxx_messageInfo_Ticket proto.InternalMessageInfo

func (m *Ticket) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Ticket) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *Ticket) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *Ticket) GetSource() Source {
	if m != nil {
		return m.Source
	}
	return Source_UNDEFINED_SOURCE
}

func (m *Ticket) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_UNDEFINED_TYPE
}

func (m *Ticket) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OPEN
}

func (m *Ticket) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Ticket) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Ticket) GetMediaIds() []string {
	if m != nil {
		return m.MediaIds
	}
	return nil
}

func (m *Ticket) GetAppointmentIds() []string {
	if m != nil {
		return m.AppointmentIds
	}
	return nil
}

func (m *Ticket) GetPriority() Priority {
	if m != nil {
		return m.Priority
	}
	return Priority_DEFAULT
}

func (m *Ticket) GetDueDate() int64 {
	if m != nil {
		return m.DueDate
	}
	return 0
}

func (m *Ticket) GetAssignee() *Assignee {
	if m != nil {
		return m.Assignee
	}
	return nil
}

func (m *Ticket) GetInvolvedPersons() []*InvolvedPerson {
	if m != nil {
		return m.InvolvedPersons
	}
	return nil
}

type Reference struct {
	ReferenceType        ReferenceType `protobuf:"varint,1,opt,name=referenceType,proto3,enum=coozzy.ticket.ticket.ReferenceType" json:"referenceType,omitempty"`
	ReferenceId          string        `protobuf:"bytes,2,opt,name=referenceId,proto3" json:"referenceId,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Reference) Reset()         { *m = Reference{} }
func (m *Reference) String() string { return proto.CompactTextString(m) }
func (*Reference) ProtoMessage()    {}
func (*Reference) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{1}
}

func (m *Reference) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reference.Unmarshal(m, b)
}
func (m *Reference) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reference.Marshal(b, m, deterministic)
}
func (m *Reference) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reference.Merge(m, src)
}
func (m *Reference) XXX_Size() int {
	return xxx_messageInfo_Reference.Size(m)
}
func (m *Reference) XXX_DiscardUnknown() {
	xxx_messageInfo_Reference.DiscardUnknown(m)
}

var xxx_messageInfo_Reference proto.InternalMessageInfo

func (m *Reference) GetReferenceType() ReferenceType {
	if m != nil {
		return m.ReferenceType
	}
	return ReferenceType_WITHOUT
}

func (m *Reference) GetReferenceId() string {
	if m != nil {
		return m.ReferenceId
	}
	return ""
}

type Assignee struct {
	// User ID, e.g. auth0|1 or foo@example.com
	UserReference string `protobuf:"bytes,1,opt,name=userReference,proto3" json:"userReference,omitempty"`
	// Optional account ID, e.g. 2
	AccountId            int64    `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Assignee) Reset()         { *m = Assignee{} }
func (m *Assignee) String() string { return proto.CompactTextString(m) }
func (*Assignee) ProtoMessage()    {}
func (*Assignee) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{2}
}

func (m *Assignee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Assignee.Unmarshal(m, b)
}
func (m *Assignee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Assignee.Marshal(b, m, deterministic)
}
func (m *Assignee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Assignee.Merge(m, src)
}
func (m *Assignee) XXX_Size() int {
	return xxx_messageInfo_Assignee.Size(m)
}
func (m *Assignee) XXX_DiscardUnknown() {
	xxx_messageInfo_Assignee.DiscardUnknown(m)
}

var xxx_messageInfo_Assignee proto.InternalMessageInfo

func (m *Assignee) GetUserReference() string {
	if m != nil {
		return m.UserReference
	}
	return ""
}

func (m *Assignee) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type InvolvedPerson struct {
	// User ID, e.g. auth0|1 or foo@example.com
	UserReference string `protobuf:"bytes,1,opt,name=userReference,proto3" json:"userReference,omitempty"`
	// Optional account ID, e.g. 2
	AccountId            int64    `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InvolvedPerson) Reset()         { *m = InvolvedPerson{} }
func (m *InvolvedPerson) String() string { return proto.CompactTextString(m) }
func (*InvolvedPerson) ProtoMessage()    {}
func (*InvolvedPerson) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{3}
}

func (m *InvolvedPerson) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InvolvedPerson.Unmarshal(m, b)
}
func (m *InvolvedPerson) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InvolvedPerson.Marshal(b, m, deterministic)
}
func (m *InvolvedPerson) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InvolvedPerson.Merge(m, src)
}
func (m *InvolvedPerson) XXX_Size() int {
	return xxx_messageInfo_InvolvedPerson.Size(m)
}
func (m *InvolvedPerson) XXX_DiscardUnknown() {
	xxx_messageInfo_InvolvedPerson.DiscardUnknown(m)
}

var xxx_messageInfo_InvolvedPerson proto.InternalMessageInfo

func (m *InvolvedPerson) GetUserReference() string {
	if m != nil {
		return m.UserReference
	}
	return ""
}

func (m *InvolvedPerson) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type TicketCreated struct {
	// The userId of the authenticated user that made this action
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// The accountId of the authenticated user that made this action
	AccountId int64   `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Ticket    *Ticket `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	// UNIX timestamp in seconds when this happened
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketCreated) Reset()         { *m = TicketCreated{} }
func (m *TicketCreated) String() string { return proto.CompactTextString(m) }
func (*TicketCreated) ProtoMessage()    {}
func (*TicketCreated) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{4}
}

func (m *TicketCreated) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketCreated.Unmarshal(m, b)
}
func (m *TicketCreated) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketCreated.Marshal(b, m, deterministic)
}
func (m *TicketCreated) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketCreated.Merge(m, src)
}
func (m *TicketCreated) XXX_Size() int {
	return xxx_messageInfo_TicketCreated.Size(m)
}
func (m *TicketCreated) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketCreated.DiscardUnknown(m)
}

var xxx_messageInfo_TicketCreated proto.InternalMessageInfo

func (m *TicketCreated) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TicketCreated) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *TicketCreated) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *TicketCreated) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TicketReferenceChanged struct {
	// The userId of the authenticated user that made this action
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// The accountId of the authenticated user that made this action
	AccountId    int64      `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Ticket       *Ticket    `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	OldReference *Reference `protobuf:"bytes,4,opt,name=oldReference,proto3" json:"oldReference,omitempty"`
	// UNIX timestamp in seconds when this happened
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketReferenceChanged) Reset()         { *m = TicketReferenceChanged{} }
func (m *TicketReferenceChanged) String() string { return proto.CompactTextString(m) }
func (*TicketReferenceChanged) ProtoMessage()    {}
func (*TicketReferenceChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{5}
}

func (m *TicketReferenceChanged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketReferenceChanged.Unmarshal(m, b)
}
func (m *TicketReferenceChanged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketReferenceChanged.Marshal(b, m, deterministic)
}
func (m *TicketReferenceChanged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketReferenceChanged.Merge(m, src)
}
func (m *TicketReferenceChanged) XXX_Size() int {
	return xxx_messageInfo_TicketReferenceChanged.Size(m)
}
func (m *TicketReferenceChanged) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketReferenceChanged.DiscardUnknown(m)
}

var xxx_messageInfo_TicketReferenceChanged proto.InternalMessageInfo

func (m *TicketReferenceChanged) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TicketReferenceChanged) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *TicketReferenceChanged) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *TicketReferenceChanged) GetOldReference() *Reference {
	if m != nil {
		return m.OldReference
	}
	return nil
}

func (m *TicketReferenceChanged) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TicketAssigneeChanged struct {
	// The userId of the authenticated user that made this action
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// The accountId of the authenticated user that made this action
	AccountId   int64     `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Ticket      *Ticket   `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	OldAssignee *Assignee `protobuf:"bytes,4,opt,name=oldAssignee,proto3" json:"oldAssignee,omitempty"`
	// UNIX timestamp in seconds when this happened
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketAssigneeChanged) Reset()         { *m = TicketAssigneeChanged{} }
func (m *TicketAssigneeChanged) String() string { return proto.CompactTextString(m) }
func (*TicketAssigneeChanged) ProtoMessage()    {}
func (*TicketAssigneeChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{6}
}

func (m *TicketAssigneeChanged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketAssigneeChanged.Unmarshal(m, b)
}
func (m *TicketAssigneeChanged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketAssigneeChanged.Marshal(b, m, deterministic)
}
func (m *TicketAssigneeChanged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketAssigneeChanged.Merge(m, src)
}
func (m *TicketAssigneeChanged) XXX_Size() int {
	return xxx_messageInfo_TicketAssigneeChanged.Size(m)
}
func (m *TicketAssigneeChanged) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketAssigneeChanged.DiscardUnknown(m)
}

var xxx_messageInfo_TicketAssigneeChanged proto.InternalMessageInfo

func (m *TicketAssigneeChanged) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TicketAssigneeChanged) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *TicketAssigneeChanged) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *TicketAssigneeChanged) GetOldAssignee() *Assignee {
	if m != nil {
		return m.OldAssignee
	}
	return nil
}

func (m *TicketAssigneeChanged) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TicketPersonAdded struct {
	// The userId of the authenticated user that made this action
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// The accountId of the authenticated user that made this action
	AccountId      int64           `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Ticket         *Ticket         `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	InvolvedPerson *InvolvedPerson `protobuf:"bytes,4,opt,name=involvedPerson,proto3" json:"involvedPerson,omitempty"`
	// UNIX timestamp in seconds when this happened
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketPersonAdded) Reset()         { *m = TicketPersonAdded{} }
func (m *TicketPersonAdded) String() string { return proto.CompactTextString(m) }
func (*TicketPersonAdded) ProtoMessage()    {}
func (*TicketPersonAdded) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{7}
}

func (m *TicketPersonAdded) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketPersonAdded.Unmarshal(m, b)
}
func (m *TicketPersonAdded) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketPersonAdded.Marshal(b, m, deterministic)
}
func (m *TicketPersonAdded) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketPersonAdded.Merge(m, src)
}
func (m *TicketPersonAdded) XXX_Size() int {
	return xxx_messageInfo_TicketPersonAdded.Size(m)
}
func (m *TicketPersonAdded) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketPersonAdded.DiscardUnknown(m)
}

var xxx_messageInfo_TicketPersonAdded proto.InternalMessageInfo

func (m *TicketPersonAdded) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TicketPersonAdded) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *TicketPersonAdded) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *TicketPersonAdded) GetInvolvedPerson() *InvolvedPerson {
	if m != nil {
		return m.InvolvedPerson
	}
	return nil
}

func (m *TicketPersonAdded) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TicketPersonRemoved struct {
	// The userId of the authenticated user that made this action
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// The accountId of the authenticated user that made this action
	AccountId      int64           `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Ticket         *Ticket         `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	InvolvedPerson *InvolvedPerson `protobuf:"bytes,4,opt,name=involvedPerson,proto3" json:"involvedPerson,omitempty"`
	// UNIX timestamp in seconds when this happened
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketPersonRemoved) Reset()         { *m = TicketPersonRemoved{} }
func (m *TicketPersonRemoved) String() string { return proto.CompactTextString(m) }
func (*TicketPersonRemoved) ProtoMessage()    {}
func (*TicketPersonRemoved) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{8}
}

func (m *TicketPersonRemoved) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketPersonRemoved.Unmarshal(m, b)
}
func (m *TicketPersonRemoved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketPersonRemoved.Marshal(b, m, deterministic)
}
func (m *TicketPersonRemoved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketPersonRemoved.Merge(m, src)
}
func (m *TicketPersonRemoved) XXX_Size() int {
	return xxx_messageInfo_TicketPersonRemoved.Size(m)
}
func (m *TicketPersonRemoved) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketPersonRemoved.DiscardUnknown(m)
}

var xxx_messageInfo_TicketPersonRemoved proto.InternalMessageInfo

func (m *TicketPersonRemoved) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TicketPersonRemoved) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *TicketPersonRemoved) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *TicketPersonRemoved) GetInvolvedPerson() *InvolvedPerson {
	if m != nil {
		return m.InvolvedPerson
	}
	return nil
}

func (m *TicketPersonRemoved) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TicketTypeChanged struct {
	// The userId of the authenticated user that made this action
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// The accountId of the authenticated user that made this action
	AccountId int64   `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Ticket    *Ticket `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	OldType   Type    `protobuf:"varint,4,opt,name=oldType,proto3,enum=coozzy.ticket.ticket.Type" json:"oldType,omitempty"`
	// UNIX timestamp in seconds when this happened
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketTypeChanged) Reset()         { *m = TicketTypeChanged{} }
func (m *TicketTypeChanged) String() string { return proto.CompactTextString(m) }
func (*TicketTypeChanged) ProtoMessage()    {}
func (*TicketTypeChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{9}
}

func (m *TicketTypeChanged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketTypeChanged.Unmarshal(m, b)
}
func (m *TicketTypeChanged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketTypeChanged.Marshal(b, m, deterministic)
}
func (m *TicketTypeChanged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketTypeChanged.Merge(m, src)
}
func (m *TicketTypeChanged) XXX_Size() int {
	return xxx_messageInfo_TicketTypeChanged.Size(m)
}
func (m *TicketTypeChanged) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketTypeChanged.DiscardUnknown(m)
}

var xxx_messageInfo_TicketTypeChanged proto.InternalMessageInfo

func (m *TicketTypeChanged) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TicketTypeChanged) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *TicketTypeChanged) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *TicketTypeChanged) GetOldType() Type {
	if m != nil {
		return m.OldType
	}
	return Type_UNDEFINED_TYPE
}

func (m *TicketTypeChanged) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type TicketStatusChanged struct {
	// The userId of the authenticated user that made this action
	UserId string `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	// The accountId of the authenticated user that made this action
	AccountId int64   `protobuf:"varint,2,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Ticket    *Ticket `protobuf:"bytes,3,opt,name=ticket,proto3" json:"ticket,omitempty"`
	OldStatus Status  `protobuf:"varint,4,opt,name=oldStatus,proto3,enum=coozzy.ticket.ticket.Status" json:"oldStatus,omitempty"`
	// UNIX timestamp in seconds when this happened
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TicketStatusChanged) Reset()         { *m = TicketStatusChanged{} }
func (m *TicketStatusChanged) String() string { return proto.CompactTextString(m) }
func (*TicketStatusChanged) ProtoMessage()    {}
func (*TicketStatusChanged) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{10}
}

func (m *TicketStatusChanged) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TicketStatusChanged.Unmarshal(m, b)
}
func (m *TicketStatusChanged) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TicketStatusChanged.Marshal(b, m, deterministic)
}
func (m *TicketStatusChanged) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TicketStatusChanged.Merge(m, src)
}
func (m *TicketStatusChanged) XXX_Size() int {
	return xxx_messageInfo_TicketStatusChanged.Size(m)
}
func (m *TicketStatusChanged) XXX_DiscardUnknown() {
	xxx_messageInfo_TicketStatusChanged.DiscardUnknown(m)
}

var xxx_messageInfo_TicketStatusChanged proto.InternalMessageInfo

func (m *TicketStatusChanged) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TicketStatusChanged) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *TicketStatusChanged) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func (m *TicketStatusChanged) GetOldStatus() Status {
	if m != nil {
		return m.OldStatus
	}
	return Status_OPEN
}

func (m *TicketStatusChanged) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type GetTicketRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTicketRequest) Reset()         { *m = GetTicketRequest{} }
func (m *GetTicketRequest) String() string { return proto.CompactTextString(m) }
func (*GetTicketRequest) ProtoMessage()    {}
func (*GetTicketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{11}
}

func (m *GetTicketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTicketRequest.Unmarshal(m, b)
}
func (m *GetTicketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTicketRequest.Marshal(b, m, deterministic)
}
func (m *GetTicketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTicketRequest.Merge(m, src)
}
func (m *GetTicketRequest) XXX_Size() int {
	return xxx_messageInfo_GetTicketRequest.Size(m)
}
func (m *GetTicketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTicketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTicketRequest proto.InternalMessageInfo

func (m *GetTicketRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type GetTicketResponse struct {
	Ticket               *Ticket  `protobuf:"bytes,2,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTicketResponse) Reset()         { *m = GetTicketResponse{} }
func (m *GetTicketResponse) String() string { return proto.CompactTextString(m) }
func (*GetTicketResponse) ProtoMessage()    {}
func (*GetTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{12}
}

func (m *GetTicketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTicketResponse.Unmarshal(m, b)
}
func (m *GetTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTicketResponse.Marshal(b, m, deterministic)
}
func (m *GetTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTicketResponse.Merge(m, src)
}
func (m *GetTicketResponse) XXX_Size() int {
	return xxx_messageInfo_GetTicketResponse.Size(m)
}
func (m *GetTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTicketResponse proto.InternalMessageInfo

func (m *GetTicketResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type ListTicketsRequest struct {
	AccountId            int64    `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListTicketsRequest) Reset()         { *m = ListTicketsRequest{} }
func (m *ListTicketsRequest) String() string { return proto.CompactTextString(m) }
func (*ListTicketsRequest) ProtoMessage()    {}
func (*ListTicketsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{13}
}

func (m *ListTicketsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTicketsRequest.Unmarshal(m, b)
}
func (m *ListTicketsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTicketsRequest.Marshal(b, m, deterministic)
}
func (m *ListTicketsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTicketsRequest.Merge(m, src)
}
func (m *ListTicketsRequest) XXX_Size() int {
	return xxx_messageInfo_ListTicketsRequest.Size(m)
}
func (m *ListTicketsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTicketsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListTicketsRequest proto.InternalMessageInfo

func (m *ListTicketsRequest) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

type ListTicketsResponse struct {
	Tickets              []*Ticket `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ListTicketsResponse) Reset()         { *m = ListTicketsResponse{} }
func (m *ListTicketsResponse) String() string { return proto.CompactTextString(m) }
func (*ListTicketsResponse) ProtoMessage()    {}
func (*ListTicketsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{14}
}

func (m *ListTicketsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListTicketsResponse.Unmarshal(m, b)
}
func (m *ListTicketsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListTicketsResponse.Marshal(b, m, deterministic)
}
func (m *ListTicketsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListTicketsResponse.Merge(m, src)
}
func (m *ListTicketsResponse) XXX_Size() int {
	return xxx_messageInfo_ListTicketsResponse.Size(m)
}
func (m *ListTicketsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListTicketsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListTicketsResponse proto.InternalMessageInfo

func (m *ListTicketsResponse) GetTickets() []*Ticket {
	if m != nil {
		return m.Tickets
	}
	return nil
}

type CreateTicketRequest struct {
	// The owner of the ticket
	AccountId      int64      `protobuf:"varint,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	Reference      *Reference `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	Source         Source     `protobuf:"varint,3,opt,name=source,proto3,enum=coozzy.ticket.ticket.Source" json:"source,omitempty"`
	Type           Type       `protobuf:"varint,4,opt,name=type,proto3,enum=coozzy.ticket.ticket.Type" json:"type,omitempty"`
	Status         Status     `protobuf:"varint,5,opt,name=status,proto3,enum=coozzy.ticket.ticket.Status" json:"status,omitempty"`
	Title          string     `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Description    string     `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	MediaIds       []string   `protobuf:"bytes,8,rep,name=mediaIds,proto3" json:"mediaIds,omitempty"`
	AppointmentIds []string   `protobuf:"bytes,9,rep,name=appointmentIds,proto3" json:"appointmentIds,omitempty"`
	Priority       Priority   `protobuf:"varint,10,opt,name=priority,proto3,enum=coozzy.ticket.ticket.Priority" json:"priority,omitempty"`
	// UNIX timestamp in seconds
	DueDate              int64             `protobuf:"varint,11,opt,name=dueDate,proto3" json:"dueDate,omitempty"`
	Assignee             *Assignee         `protobuf:"bytes,12,opt,name=assignee,proto3" json:"assignee,omitempty"`
	InvolvedPersons      []*InvolvedPerson `protobuf:"bytes,13,rep,name=involvedPersons,proto3" json:"involvedPersons,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *CreateTicketRequest) Reset()         { *m = CreateTicketRequest{} }
func (m *CreateTicketRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTicketRequest) ProtoMessage()    {}
func (*CreateTicketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{15}
}

func (m *CreateTicketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTicketRequest.Unmarshal(m, b)
}
func (m *CreateTicketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTicketRequest.Marshal(b, m, deterministic)
}
func (m *CreateTicketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTicketRequest.Merge(m, src)
}
func (m *CreateTicketRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTicketRequest.Size(m)
}
func (m *CreateTicketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTicketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTicketRequest proto.InternalMessageInfo

func (m *CreateTicketRequest) GetAccountId() int64 {
	if m != nil {
		return m.AccountId
	}
	return 0
}

func (m *CreateTicketRequest) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

func (m *CreateTicketRequest) GetSource() Source {
	if m != nil {
		return m.Source
	}
	return Source_UNDEFINED_SOURCE
}

func (m *CreateTicketRequest) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_UNDEFINED_TYPE
}

func (m *CreateTicketRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OPEN
}

func (m *CreateTicketRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateTicketRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateTicketRequest) GetMediaIds() []string {
	if m != nil {
		return m.MediaIds
	}
	return nil
}

func (m *CreateTicketRequest) GetAppointmentIds() []string {
	if m != nil {
		return m.AppointmentIds
	}
	return nil
}

func (m *CreateTicketRequest) GetPriority() Priority {
	if m != nil {
		return m.Priority
	}
	return Priority_DEFAULT
}

func (m *CreateTicketRequest) GetDueDate() int64 {
	if m != nil {
		return m.DueDate
	}
	return 0
}

func (m *CreateTicketRequest) GetAssignee() *Assignee {
	if m != nil {
		return m.Assignee
	}
	return nil
}

func (m *CreateTicketRequest) GetInvolvedPersons() []*InvolvedPerson {
	if m != nil {
		return m.InvolvedPersons
	}
	return nil
}

type CreateTicketResponse struct {
	Ticket               *Ticket  `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTicketResponse) Reset()         { *m = CreateTicketResponse{} }
func (m *CreateTicketResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTicketResponse) ProtoMessage()    {}
func (*CreateTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{16}
}

func (m *CreateTicketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTicketResponse.Unmarshal(m, b)
}
func (m *CreateTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTicketResponse.Marshal(b, m, deterministic)
}
func (m *CreateTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTicketResponse.Merge(m, src)
}
func (m *CreateTicketResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTicketResponse.Size(m)
}
func (m *CreateTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTicketResponse proto.InternalMessageInfo

func (m *CreateTicketResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type UpdateRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{17}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type UpdateResponse struct {
	Ticket               *Ticket  `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{18}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type CloseRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{19}
}

func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (m *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(m, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

func (m *CloseRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CloseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponse) Reset()         { *m = CloseResponse{} }
func (m *CloseResponse) String() string { return proto.CompactTextString(m) }
func (*CloseResponse) ProtoMessage()    {}
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{20}
}

func (m *CloseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponse.Unmarshal(m, b)
}
func (m *CloseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponse.Marshal(b, m, deterministic)
}
func (m *CloseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponse.Merge(m, src)
}
func (m *CloseResponse) XXX_Size() int {
	return xxx_messageInfo_CloseResponse.Size(m)
}
func (m *CloseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponse proto.InternalMessageInfo

type UpdateReferenceRequest struct {
	Id                   string     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Reference            *Reference `protobuf:"bytes,2,opt,name=reference,proto3" json:"reference,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *UpdateReferenceRequest) Reset()         { *m = UpdateReferenceRequest{} }
func (m *UpdateReferenceRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateReferenceRequest) ProtoMessage()    {}
func (*UpdateReferenceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{21}
}

func (m *UpdateReferenceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReferenceRequest.Unmarshal(m, b)
}
func (m *UpdateReferenceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReferenceRequest.Marshal(b, m, deterministic)
}
func (m *UpdateReferenceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReferenceRequest.Merge(m, src)
}
func (m *UpdateReferenceRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateReferenceRequest.Size(m)
}
func (m *UpdateReferenceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReferenceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReferenceRequest proto.InternalMessageInfo

func (m *UpdateReferenceRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateReferenceRequest) GetReference() *Reference {
	if m != nil {
		return m.Reference
	}
	return nil
}

type UpdateReferenceResponse struct {
	Ticket               *Ticket  `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateReferenceResponse) Reset()         { *m = UpdateReferenceResponse{} }
func (m *UpdateReferenceResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateReferenceResponse) ProtoMessage()    {}
func (*UpdateReferenceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{22}
}

func (m *UpdateReferenceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateReferenceResponse.Unmarshal(m, b)
}
func (m *UpdateReferenceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateReferenceResponse.Marshal(b, m, deterministic)
}
func (m *UpdateReferenceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateReferenceResponse.Merge(m, src)
}
func (m *UpdateReferenceResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateReferenceResponse.Size(m)
}
func (m *UpdateReferenceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateReferenceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateReferenceResponse proto.InternalMessageInfo

func (m *UpdateReferenceResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type DeleteTicketRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTicketRequest) Reset()         { *m = DeleteTicketRequest{} }
func (m *DeleteTicketRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTicketRequest) ProtoMessage()    {}
func (*DeleteTicketRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{23}
}

func (m *DeleteTicketRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTicketRequest.Unmarshal(m, b)
}
func (m *DeleteTicketRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTicketRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTicketRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTicketRequest.Merge(m, src)
}
func (m *DeleteTicketRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTicketRequest.Size(m)
}
func (m *DeleteTicketRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTicketRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTicketRequest proto.InternalMessageInfo

func (m *DeleteTicketRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteTicketResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTicketResponse) Reset()         { *m = DeleteTicketResponse{} }
func (m *DeleteTicketResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTicketResponse) ProtoMessage()    {}
func (*DeleteTicketResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{24}
}

func (m *DeleteTicketResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTicketResponse.Unmarshal(m, b)
}
func (m *DeleteTicketResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTicketResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTicketResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTicketResponse.Merge(m, src)
}
func (m *DeleteTicketResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTicketResponse.Size(m)
}
func (m *DeleteTicketResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTicketResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTicketResponse proto.InternalMessageInfo

type SetAssigneeRequest struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Assignee             *Assignee `protobuf:"bytes,2,opt,name=assignee,proto3" json:"assignee,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *SetAssigneeRequest) Reset()         { *m = SetAssigneeRequest{} }
func (m *SetAssigneeRequest) String() string { return proto.CompactTextString(m) }
func (*SetAssigneeRequest) ProtoMessage()    {}
func (*SetAssigneeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{25}
}

func (m *SetAssigneeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAssigneeRequest.Unmarshal(m, b)
}
func (m *SetAssigneeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAssigneeRequest.Marshal(b, m, deterministic)
}
func (m *SetAssigneeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAssigneeRequest.Merge(m, src)
}
func (m *SetAssigneeRequest) XXX_Size() int {
	return xxx_messageInfo_SetAssigneeRequest.Size(m)
}
func (m *SetAssigneeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAssigneeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetAssigneeRequest proto.InternalMessageInfo

func (m *SetAssigneeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SetAssigneeRequest) GetAssignee() *Assignee {
	if m != nil {
		return m.Assignee
	}
	return nil
}

type SetAssigneeResponse struct {
	Ticket               *Ticket  `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetAssigneeResponse) Reset()         { *m = SetAssigneeResponse{} }
func (m *SetAssigneeResponse) String() string { return proto.CompactTextString(m) }
func (*SetAssigneeResponse) ProtoMessage()    {}
func (*SetAssigneeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{26}
}

func (m *SetAssigneeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetAssigneeResponse.Unmarshal(m, b)
}
func (m *SetAssigneeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetAssigneeResponse.Marshal(b, m, deterministic)
}
func (m *SetAssigneeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetAssigneeResponse.Merge(m, src)
}
func (m *SetAssigneeResponse) XXX_Size() int {
	return xxx_messageInfo_SetAssigneeResponse.Size(m)
}
func (m *SetAssigneeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetAssigneeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetAssigneeResponse proto.InternalMessageInfo

func (m *SetAssigneeResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type AddPersonRequest struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Person               *InvolvedPerson `protobuf:"bytes,2,opt,name=person,proto3" json:"person,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *AddPersonRequest) Reset()         { *m = AddPersonRequest{} }
func (m *AddPersonRequest) String() string { return proto.CompactTextString(m) }
func (*AddPersonRequest) ProtoMessage()    {}
func (*AddPersonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{27}
}

func (m *AddPersonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPersonRequest.Unmarshal(m, b)
}
func (m *AddPersonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPersonRequest.Marshal(b, m, deterministic)
}
func (m *AddPersonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPersonRequest.Merge(m, src)
}
func (m *AddPersonRequest) XXX_Size() int {
	return xxx_messageInfo_AddPersonRequest.Size(m)
}
func (m *AddPersonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPersonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPersonRequest proto.InternalMessageInfo

func (m *AddPersonRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *AddPersonRequest) GetPerson() *InvolvedPerson {
	if m != nil {
		return m.Person
	}
	return nil
}

type AddPersonResponse struct {
	Ticket               *Ticket  `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPersonResponse) Reset()         { *m = AddPersonResponse{} }
func (m *AddPersonResponse) String() string { return proto.CompactTextString(m) }
func (*AddPersonResponse) ProtoMessage()    {}
func (*AddPersonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{28}
}

func (m *AddPersonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPersonResponse.Unmarshal(m, b)
}
func (m *AddPersonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPersonResponse.Marshal(b, m, deterministic)
}
func (m *AddPersonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPersonResponse.Merge(m, src)
}
func (m *AddPersonResponse) XXX_Size() int {
	return xxx_messageInfo_AddPersonResponse.Size(m)
}
func (m *AddPersonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPersonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddPersonResponse proto.InternalMessageInfo

func (m *AddPersonResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type RemovePersonRequest struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Person               *InvolvedPerson `protobuf:"bytes,2,opt,name=person,proto3" json:"person,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RemovePersonRequest) Reset()         { *m = RemovePersonRequest{} }
func (m *RemovePersonRequest) String() string { return proto.CompactTextString(m) }
func (*RemovePersonRequest) ProtoMessage()    {}
func (*RemovePersonRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{29}
}

func (m *RemovePersonRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePersonRequest.Unmarshal(m, b)
}
func (m *RemovePersonRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePersonRequest.Marshal(b, m, deterministic)
}
func (m *RemovePersonRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePersonRequest.Merge(m, src)
}
func (m *RemovePersonRequest) XXX_Size() int {
	return xxx_messageInfo_RemovePersonRequest.Size(m)
}
func (m *RemovePersonRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePersonRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePersonRequest proto.InternalMessageInfo

func (m *RemovePersonRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RemovePersonRequest) GetPerson() *InvolvedPerson {
	if m != nil {
		return m.Person
	}
	return nil
}

type RemovePersonResponse struct {
	Ticket               *Ticket  `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemovePersonResponse) Reset()         { *m = RemovePersonResponse{} }
func (m *RemovePersonResponse) String() string { return proto.CompactTextString(m) }
func (*RemovePersonResponse) ProtoMessage()    {}
func (*RemovePersonResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{30}
}

func (m *RemovePersonResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemovePersonResponse.Unmarshal(m, b)
}
func (m *RemovePersonResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemovePersonResponse.Marshal(b, m, deterministic)
}
func (m *RemovePersonResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemovePersonResponse.Merge(m, src)
}
func (m *RemovePersonResponse) XXX_Size() int {
	return xxx_messageInfo_RemovePersonResponse.Size(m)
}
func (m *RemovePersonResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemovePersonResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemovePersonResponse proto.InternalMessageInfo

func (m *RemovePersonResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type UpdateTypeRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 Type     `protobuf:"varint,2,opt,name=type,proto3,enum=coozzy.ticket.ticket.Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTypeRequest) Reset()         { *m = UpdateTypeRequest{} }
func (m *UpdateTypeRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateTypeRequest) ProtoMessage()    {}
func (*UpdateTypeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{31}
}

func (m *UpdateTypeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTypeRequest.Unmarshal(m, b)
}
func (m *UpdateTypeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTypeRequest.Marshal(b, m, deterministic)
}
func (m *UpdateTypeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTypeRequest.Merge(m, src)
}
func (m *UpdateTypeRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateTypeRequest.Size(m)
}
func (m *UpdateTypeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTypeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTypeRequest proto.InternalMessageInfo

func (m *UpdateTypeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateTypeRequest) GetType() Type {
	if m != nil {
		return m.Type
	}
	return Type_UNDEFINED_TYPE
}

type UpdateTypeResponse struct {
	Ticket               *Ticket  `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateTypeResponse) Reset()         { *m = UpdateTypeResponse{} }
func (m *UpdateTypeResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateTypeResponse) ProtoMessage()    {}
func (*UpdateTypeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{32}
}

func (m *UpdateTypeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateTypeResponse.Unmarshal(m, b)
}
func (m *UpdateTypeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateTypeResponse.Marshal(b, m, deterministic)
}
func (m *UpdateTypeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateTypeResponse.Merge(m, src)
}
func (m *UpdateTypeResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateTypeResponse.Size(m)
}
func (m *UpdateTypeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateTypeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateTypeResponse proto.InternalMessageInfo

func (m *UpdateTypeResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

type UpdateStatusRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status               Status   `protobuf:"varint,2,opt,name=status,proto3,enum=coozzy.ticket.ticket.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateStatusRequest) Reset()         { *m = UpdateStatusRequest{} }
func (m *UpdateStatusRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateStatusRequest) ProtoMessage()    {}
func (*UpdateStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{33}
}

func (m *UpdateStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStatusRequest.Unmarshal(m, b)
}
func (m *UpdateStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStatusRequest.Marshal(b, m, deterministic)
}
func (m *UpdateStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStatusRequest.Merge(m, src)
}
func (m *UpdateStatusRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateStatusRequest.Size(m)
}
func (m *UpdateStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStatusRequest proto.InternalMessageInfo

func (m *UpdateStatusRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateStatusRequest) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OPEN
}

type UpdateStatusResponse struct {
	Ticket               *Ticket  `protobuf:"bytes,1,opt,name=ticket,proto3" json:"ticket,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateStatusResponse) Reset()         { *m = UpdateStatusResponse{} }
func (m *UpdateStatusResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateStatusResponse) ProtoMessage()    {}
func (*UpdateStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8ad05dd059f06d81, []int{34}
}

func (m *UpdateStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateStatusResponse.Unmarshal(m, b)
}
func (m *UpdateStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateStatusResponse.Marshal(b, m, deterministic)
}
func (m *UpdateStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateStatusResponse.Merge(m, src)
}
func (m *UpdateStatusResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateStatusResponse.Size(m)
}
func (m *UpdateStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateStatusResponse proto.InternalMessageInfo

func (m *UpdateStatusResponse) GetTicket() *Ticket {
	if m != nil {
		return m.Ticket
	}
	return nil
}

func init() {
	proto.RegisterEnum("coozzy.ticket.ticket.ReferenceType", ReferenceType_name, ReferenceType_value)
	proto.RegisterEnum("coozzy.ticket.ticket.Source", Source_name, Source_value)
	proto.RegisterEnum("coozzy.ticket.ticket.Status", Status_name, Status_value)
	proto.RegisterEnum("coozzy.ticket.ticket.Type", Type_name, Type_value)
	proto.RegisterEnum("coozzy.ticket.ticket.Priority", Priority_name, Priority_value)
	proto.RegisterType((*Ticket)(nil), "coozzy.ticket.ticket.Ticket")
	proto.RegisterType((*Reference)(nil), "coozzy.ticket.ticket.Reference")
	proto.RegisterType((*Assignee)(nil), "coozzy.ticket.ticket.Assignee")
	proto.RegisterType((*InvolvedPerson)(nil), "coozzy.ticket.ticket.InvolvedPerson")
	proto.RegisterType((*TicketCreated)(nil), "coozzy.ticket.ticket.TicketCreated")
	proto.RegisterType((*TicketReferenceChanged)(nil), "coozzy.ticket.ticket.TicketReferenceChanged")
	proto.RegisterType((*TicketAssigneeChanged)(nil), "coozzy.ticket.ticket.TicketAssigneeChanged")
	proto.RegisterType((*TicketPersonAdded)(nil), "coozzy.ticket.ticket.TicketPersonAdded")
	proto.RegisterType((*TicketPersonRemoved)(nil), "coozzy.ticket.ticket.TicketPersonRemoved")
	proto.RegisterType((*TicketTypeChanged)(nil), "coozzy.ticket.ticket.TicketTypeChanged")
	proto.RegisterType((*TicketStatusChanged)(nil), "coozzy.ticket.ticket.TicketStatusChanged")
	proto.RegisterType((*GetTicketRequest)(nil), "coozzy.ticket.ticket.GetTicketRequest")
	proto.RegisterType((*GetTicketResponse)(nil), "coozzy.ticket.ticket.GetTicketResponse")
	proto.RegisterType((*ListTicketsRequest)(nil), "coozzy.ticket.ticket.ListTicketsRequest")
	proto.RegisterType((*ListTicketsResponse)(nil), "coozzy.ticket.ticket.ListTicketsResponse")
	proto.RegisterType((*CreateTicketRequest)(nil), "coozzy.ticket.ticket.CreateTicketRequest")
	proto.RegisterType((*CreateTicketResponse)(nil), "coozzy.ticket.ticket.CreateTicketResponse")
	proto.RegisterType((*UpdateRequest)(nil), "coozzy.ticket.ticket.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "coozzy.ticket.ticket.UpdateResponse")
	proto.RegisterType((*CloseRequest)(nil), "coozzy.ticket.ticket.CloseRequest")
	proto.RegisterType((*CloseResponse)(nil), "coozzy.ticket.ticket.CloseResponse")
	proto.RegisterType((*UpdateReferenceRequest)(nil), "coozzy.ticket.ticket.UpdateReferenceRequest")
	proto.RegisterType((*UpdateReferenceResponse)(nil), "coozzy.ticket.ticket.UpdateReferenceResponse")
	proto.RegisterType((*DeleteTicketRequest)(nil), "coozzy.ticket.ticket.DeleteTicketRequest")
	proto.RegisterType((*DeleteTicketResponse)(nil), "coozzy.ticket.ticket.DeleteTicketResponse")
	proto.RegisterType((*SetAssigneeRequest)(nil), "coozzy.ticket.ticket.SetAssigneeRequest")
	proto.RegisterType((*SetAssigneeResponse)(nil), "coozzy.ticket.ticket.SetAssigneeResponse")
	proto.RegisterType((*AddPersonRequest)(nil), "coozzy.ticket.ticket.AddPersonRequest")
	proto.RegisterType((*AddPersonResponse)(nil), "coozzy.ticket.ticket.AddPersonResponse")
	proto.RegisterType((*RemovePersonRequest)(nil), "coozzy.ticket.ticket.RemovePersonRequest")
	proto.RegisterType((*RemovePersonResponse)(nil), "coozzy.ticket.ticket.RemovePersonResponse")
	proto.RegisterType((*UpdateTypeRequest)(nil), "coozzy.ticket.ticket.UpdateTypeRequest")
	proto.RegisterType((*UpdateTypeResponse)(nil), "coozzy.ticket.ticket.UpdateTypeResponse")
	proto.RegisterType((*UpdateStatusRequest)(nil), "coozzy.ticket.ticket.UpdateStatusRequest")
	proto.RegisterType((*UpdateStatusResponse)(nil), "coozzy.ticket.ticket.UpdateStatusResponse")
}

func init() { proto.RegisterFile("ticket/ticket/ticket.proto", fileDescriptor_8ad05dd059f06d81) }

var fileDescriptor_8ad05dd059f06d81 = []byte{
	// 1396 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x59, 0x5d, 0x93, 0xda, 0xd4,
	0x1b, 0x27, 0xc0, 0x06, 0x78, 0x58, 0xd8, 0xf4, 0xb0, 0xff, 0xfd, 0x67, 0x98, 0x4e, 0x65, 0xd2,
	0xda, 0x52, 0xc6, 0x6e, 0x67, 0x70, 0xc7, 0x8b, 0x8e, 0x3a, 0xd2, 0x85, 0xb2, 0x51, 0x0a, 0x4c,
	0x00, 0xeb, 0xcb, 0x68, 0x9b, 0x25, 0xa7, 0x18, 0x05, 0x12, 0x93, 0xb0, 0xe3, 0xf6, 0x9b, 0xf8,
	0x05, 0xfc, 0x42, 0x5e, 0x7a, 0xe9, 0x85, 0x17, 0xea, 0xf8, 0x15, 0x9c, 0x9c, 0x93, 0x84, 0x04,
	0x12, 0xc2, 0x16, 0xed, 0xce, 0x78, 0xc5, 0xe6, 0xe4, 0x79, 0xfb, 0x9d, 0xe7, 0xed, 0xc7, 0x02,
	0x65, 0x4b, 0x1d, 0x7f, 0x87, 0xad, 0x87, 0x81, 0x8f, 0x63, 0xdd, 0xd0, 0x2c, 0x0d, 0x1d, 0x8e,
	0x35, 0xed, 0xd5, 0xab, 0xcb, 0x63, 0xe7, 0x90, 0x7e, 0x08, 0x7f, 0xa5, 0x81, 0x1d, 0x92, 0x3f,
	0x51, 0x11, 0x92, 0xaa, 0xc2, 0x33, 0x15, 0xa6, 0x9a, 0x93, 0x92, 0xaa, 0x82, 0x6e, 0x42, 0x4e,
	0x1e, 0x8f, 0xb5, 0xc5, 0xdc, 0x12, 0x15, 0x3e, 0x59, 0x61, 0xaa, 0x29, 0x69, 0x79, 0x80, 0x3e,
	0x80, 0x9c, 0x81, 0x5f, 0x62, 0x03, 0xcf, 0xc7, 0x98, 0x4f, 0x55, 0x98, 0x6a, 0xbe, 0xfe, 0xd6,
	0x71, 0x98, 0x8b, 0x63, 0xc9, 0x15, 0x93, 0x96, 0x1a, 0xe8, 0x04, 0x58, 0x53, 0x5b, 0x18, 0x63,
	0xcc, 0xa7, 0x2b, 0x4c, 0xb5, 0x58, 0xbf, 0x19, 0xae, 0x3b, 0x20, 0x32, 0x92, 0x23, 0x8b, 0x8e,
	0x21, 0x6d, 0x5d, 0xea, 0x98, 0xdf, 0x23, 0x3a, 0xe5, 0x70, 0x9d, 0xe1, 0xa5, 0x8e, 0x25, 0x22,
	0x47, 0xbc, 0x58, 0xb2, 0xb5, 0x30, 0x79, 0x76, 0xa3, 0x17, 0x22, 0x23, 0x39, 0xb2, 0xe8, 0x10,
	0xf6, 0x2c, 0xd5, 0x9a, 0x62, 0x3e, 0x43, 0xee, 0x82, 0x3e, 0xa0, 0x0a, 0xe4, 0x15, 0x6c, 0x8e,
	0x0d, 0x55, 0xb7, 0x54, 0x6d, 0xce, 0x67, 0xc9, 0x3b, 0xff, 0x11, 0x2a, 0x43, 0x76, 0x86, 0x15,
	0x55, 0x16, 0x15, 0x93, 0xcf, 0x55, 0x52, 0xd5, 0x9c, 0xe4, 0x3d, 0xa3, 0xbb, 0x50, 0x94, 0x75,
	0x5d, 0x53, 0xe7, 0xd6, 0x0c, 0xdb, 0xf7, 0x67, 0xf2, 0x40, 0x24, 0x56, 0x4e, 0xd1, 0x23, 0xc8,
	0xea, 0x86, 0xaa, 0x19, 0xaa, 0x75, 0xc9, 0xe7, 0x49, 0xcc, 0xb7, 0xc2, 0x63, 0xee, 0x3b, 0x52,
	0x92, 0x27, 0x8f, 0x78, 0xc8, 0x28, 0x0b, 0xdc, 0x94, 0x2d, 0xcc, 0xef, 0x93, 0x74, 0xb9, 0x8f,
	0xb6, 0x55, 0xd9, 0x34, 0xd5, 0xc9, 0x1c, 0x63, 0xbe, 0x40, 0x72, 0x15, 0x61, 0xb5, 0xe1, 0x48,
	0x49, 0x9e, 0x3c, 0xea, 0xc2, 0x81, 0x3a, 0xbf, 0xd0, 0xa6, 0x17, 0x58, 0xe9, 0x63, 0xc3, 0xd4,
	0xe6, 0x26, 0x5f, 0xac, 0xa4, 0xaa, 0xf9, 0xfa, 0x9d, 0x70, 0x13, 0x62, 0x40, 0x58, 0x5a, 0x55,
	0x16, 0x7e, 0x80, 0x9c, 0x57, 0x11, 0x48, 0x84, 0x82, 0x57, 0x13, 0x76, 0xde, 0x48, 0xf9, 0x15,
	0xeb, 0xb7, 0x63, 0x2a, 0x89, 0xa4, 0x38, 0xa8, 0x69, 0xe7, 0xc7, 0x3b, 0x70, 0x0a, 0x36, 0x27,
	0xf9, 0x8f, 0x84, 0x2e, 0x64, 0x5d, 0x7c, 0xe8, 0x0e, 0x14, 0x16, 0x26, 0x36, 0x3c, 0x8b, 0x4e,
	0xdd, 0x07, 0x0f, 0x37, 0xb7, 0x80, 0x30, 0x84, 0x62, 0x10, 0xec, 0x3f, 0x62, 0xf5, 0x47, 0x06,
	0x0a, 0xb4, 0x23, 0x4f, 0x0d, 0x2c, 0x5b, 0x58, 0x41, 0x47, 0xc0, 0xda, 0x06, 0x44, 0xb7, 0x39,
	0x9d, 0xa7, 0x98, 0x06, 0x3d, 0x01, 0x96, 0x5e, 0x9b, 0xd3, 0x9d, 0x11, 0xb5, 0x4f, 0x5d, 0x49,
	0x8e, 0xac, 0x6d, 0xd3, 0x52, 0x67, 0xd8, 0xb4, 0xe4, 0x99, 0x4e, 0x5a, 0x33, 0x25, 0x2d, 0x0f,
	0x84, 0xdf, 0x18, 0x38, 0x72, 0x14, 0x5c, 0x34, 0xa7, 0xdf, 0xc8, 0xf3, 0xc9, 0x1b, 0x0e, 0xf2,
	0x14, 0xf6, 0xb5, 0xa9, 0xb2, 0xbc, 0xe5, 0xf4, 0x76, 0xe3, 0x27, 0xa0, 0x14, 0x44, 0xba, 0xb7,
	0x8a, 0xf4, 0x57, 0x06, 0xfe, 0x47, 0xbd, 0xba, 0x25, 0x73, 0x1d, 0x40, 0x3f, 0x82, 0xbc, 0x36,
	0x55, 0xdc, 0x08, 0x1c, 0x9c, 0x71, 0xad, 0xeb, 0x57, 0x89, 0x41, 0xf9, 0x3b, 0x03, 0x37, 0xa8,
	0x4b, 0x5a, 0xc0, 0x0d, 0x45, 0x79, 0xc3, 0x08, 0x3b, 0x50, 0x0c, 0x0e, 0x08, 0x07, 0xe4, 0x76,
	0xc3, 0x65, 0x45, 0x37, 0x06, 0xed, 0x9f, 0x0c, 0x94, 0xfc, 0x68, 0x25, 0x3c, 0xd3, 0x2e, 0xfe,
	0xc3, 0x78, 0x7f, 0xf6, 0xb2, 0x6b, 0x0f, 0xc8, 0xeb, 0xa8, 0xdf, 0x13, 0xc8, 0x68, 0x53, 0x85,
	0x0c, 0xf6, 0x74, 0xec, 0xca, 0x76, 0x45, 0x63, 0x50, 0xfd, 0xe2, 0x65, 0x91, 0xae, 0xed, 0xeb,
	0xc0, 0xf5, 0x08, 0x72, 0xda, 0x54, 0xa1, 0xfe, 0x63, 0x08, 0x0c, 0xa5, 0x16, 0x4b, 0xf1, 0x18,
	0x74, 0x02, 0x70, 0x6d, 0x6c, 0xb9, 0x33, 0xf6, 0xfb, 0x05, 0x36, 0xd7, 0x88, 0x99, 0x20, 0xc2,
	0x0d, 0x9f, 0x8c, 0xa9, 0x6b, 0x73, 0x13, 0xfb, 0x80, 0x24, 0xb7, 0x07, 0x22, 0xd4, 0x01, 0x75,
	0x54, 0xd3, 0xb1, 0x65, 0xba, 0x0e, 0x03, 0x57, 0xc6, 0xac, 0x2e, 0xa8, 0xa7, 0x50, 0x0a, 0xe8,
	0x38, 0x01, 0xbc, 0x07, 0x19, 0x6a, 0xd4, 0xe4, 0x19, 0xc2, 0x0f, 0x36, 0x47, 0xe0, 0x0a, 0x0b,
	0x7f, 0xa4, 0xa1, 0x44, 0x37, 0x5d, 0x10, 0xf5, 0xc6, 0x20, 0x82, 0xf4, 0x33, 0xb9, 0x03, 0xfd,
	0x4c, 0xbd, 0x06, 0xfd, 0x4c, 0x5f, 0x99, 0x7e, 0xee, 0xbd, 0x0e, 0xfd, 0x64, 0x37, 0xd0, 0xcf,
	0xcc, 0x66, 0xfa, 0x99, 0x8d, 0xa5, 0x9f, 0xb9, 0x58, 0xfa, 0x09, 0xaf, 0x4f, 0x3f, 0xf3, 0xd1,
	0xf4, 0x73, 0x7f, 0x77, 0xfa, 0x59, 0xd8, 0x85, 0x7e, 0x76, 0xe0, 0x30, 0x58, 0x6d, 0x6b, 0xfd,
	0xc3, 0x5c, 0xa1, 0x7f, 0x9e, 0x41, 0x61, 0xa4, 0x2b, 0xb2, 0x85, 0x23, 0x7a, 0x75, 0x99, 0xcc,
	0xe4, 0x86, 0x64, 0xa6, 0xd6, 0x92, 0x29, 0x3c, 0x81, 0xa2, 0x6b, 0x78, 0xa7, 0x00, 0x6f, 0xc1,
	0xfe, 0xe9, 0x54, 0x33, 0xa3, 0xe2, 0x13, 0x0e, 0xa0, 0xe0, 0xbc, 0xa7, 0x6e, 0x84, 0x09, 0x1c,
	0xb9, 0x8e, 0xdd, 0xbe, 0x89, 0x80, 0xb6, 0x5b, 0x0b, 0x0a, 0x3d, 0xf8, 0xff, 0x9a, 0xa3, 0x9d,
	0xa0, 0xbe, 0x0d, 0xa5, 0x26, 0x9e, 0xe2, 0xd5, 0x39, 0xb2, 0x8a, 0xf8, 0x08, 0x0e, 0x83, 0x62,
	0x0e, 0xf0, 0x17, 0x80, 0x06, 0x4b, 0xb6, 0x17, 0x05, 0xda, 0x5f, 0xca, 0xc9, 0xab, 0x95, 0xb2,
	0xf0, 0x09, 0x94, 0x02, 0x1e, 0x76, 0x42, 0xfb, 0x02, 0xb8, 0x86, 0xe2, 0x56, 0x79, 0x44, 0xb0,
	0xef, 0x03, 0xab, 0x53, 0x92, 0x91, 0xbc, 0x02, 0xc9, 0x70, 0x74, 0xec, 0x35, 0xe3, 0xf3, 0xb0,
	0x53, 0xb0, 0x63, 0x28, 0x51, 0xb2, 0xf5, 0x6f, 0xc6, 0xdb, 0x81, 0xc3, 0xa0, 0x93, 0x9d, 0x42,
	0x1e, 0xc0, 0x0d, 0x5a, 0x9e, 0x64, 0x9e, 0x47, 0x04, 0xec, 0x2e, 0x84, 0xe4, 0x76, 0x0b, 0x41,
	0xf8, 0x18, 0x90, 0xdf, 0xe8, 0x4e, 0x01, 0x7e, 0x09, 0x25, 0x6a, 0xcb, 0x59, 0x1f, 0x11, 0x21,
	0x2e, 0x77, 0x50, 0x72, 0xfb, 0x1d, 0x64, 0xdf, 0x65, 0xd0, 0xf8, 0x2e, 0xa1, 0xd6, 0x1a, 0x50,
	0x08, 0x7c, 0x75, 0x47, 0x79, 0xc8, 0x3c, 0x13, 0x87, 0x67, 0xbd, 0xd1, 0x90, 0x4b, 0x20, 0x00,
	0xb6, 0xd1, 0xfc, 0xb4, 0x25, 0x0d, 0x39, 0x06, 0xed, 0x43, 0xf6, 0xf1, 0x48, 0xec, 0x34, 0xc5,
	0x6e, 0x9b, 0x4b, 0xa2, 0x1c, 0xec, 0xb5, 0xa5, 0xde, 0xa8, 0xcf, 0xa5, 0x6a, 0x1f, 0x02, 0x4b,
	0x97, 0x31, 0x3a, 0x04, 0x6e, 0xd4, 0x6d, 0xb6, 0x9e, 0x88, 0xdd, 0x56, 0xf3, 0xf9, 0xa0, 0x37,
	0x92, 0x4e, 0x5b, 0x5c, 0x02, 0x65, 0x21, 0xfd, 0xb4, 0x21, 0x76, 0x38, 0xc6, 0x56, 0xea, 0x9f,
	0xf5, 0xba, 0x2d, 0xaa, 0xdf, 0x1b, 0x9e, 0xb5, 0x24, 0x2e, 0x55, 0x7b, 0x00, 0xac, 0xc3, 0xbf,
	0xb2, 0x90, 0xee, 0xf5, 0x5b, 0x5d, 0x2e, 0x81, 0x0e, 0x20, 0x2f, 0x76, 0x9f, 0xf7, 0xa5, 0x5e,
	0x5b, 0x6a, 0x0d, 0x06, 0x1c, 0x63, 0xbf, 0x6a, 0x12, 0xcd, 0xda, 0x5d, 0x48, 0x93, 0x40, 0x11,
	0x14, 0x97, 0xce, 0x86, 0x9f, 0xf7, 0x5b, 0x34, 0xde, 0x66, 0xe3, 0x69, 0xa3, 0xdd, 0xe2, 0x98,
	0x5a, 0x0d, 0xb2, 0xee, 0x26, 0xb4, 0x41, 0x35, 0x5b, 0x4f, 0x1a, 0xa3, 0x8e, 0x0d, 0x2a, 0x03,
	0xa9, 0x4e, 0xef, 0x19, 0xb5, 0x79, 0x26, 0xb6, 0xcf, 0xb8, 0x64, 0xfd, 0xa7, 0x9c, 0xfb, 0xc5,
	0x7e, 0x80, 0x8d, 0x0b, 0x75, 0x8c, 0xd1, 0x67, 0x90, 0x6a, 0x63, 0x0b, 0xdd, 0x0d, 0xbf, 0xc4,
	0x55, 0x1e, 0x58, 0xbe, 0x17, 0x2b, 0xe7, 0x8c, 0xb2, 0x04, 0x92, 0x81, 0xa5, 0x5b, 0x0e, 0xdd,
	0x0f, 0x57, 0x0a, 0x61, 0x5c, 0xe5, 0xda, 0x36, 0xa2, 0x7e, 0x17, 0x74, 0x8e, 0x46, 0xb9, 0x08,
	0x19, 0xc6, 0x51, 0x2e, 0x42, 0x07, 0x72, 0x02, 0x7d, 0x05, 0x69, 0x9b, 0x69, 0xa2, 0x6a, 0xb8,
	0xd6, 0x3a, 0x73, 0x2d, 0xdf, 0xdf, 0x42, 0xd2, 0x33, 0xaf, 0x40, 0xde, 0x37, 0x8f, 0xa3, 0xbc,
	0xac, 0x2f, 0x85, 0x28, 0x2f, 0x21, 0xc3, 0x5d, 0x48, 0xa0, 0xaf, 0x21, 0xe7, 0x8d, 0xd1, 0xa8,
	0x54, 0xaf, 0x4e, 0xf2, 0xa8, 0x54, 0xaf, 0xcd, 0x63, 0x21, 0x81, 0x26, 0xb0, 0xef, 0x1f, 0x7b,
	0x51, 0xd9, 0x08, 0x99, 0xbf, 0x51, 0xd9, 0x08, 0x9b, 0xa2, 0x42, 0x02, 0x8d, 0x80, 0xa5, 0x33,
	0x01, 0x45, 0xfc, 0x7b, 0x2e, 0xc0, 0x84, 0xca, 0x77, 0x36, 0x0b, 0x79, 0x66, 0x25, 0xd8, 0x23,
	0x0c, 0x04, 0x09, 0x11, 0xe5, 0xe7, 0xa3, 0x2f, 0xe5, 0xdb, 0x1b, 0x65, 0x3c, 0x9b, 0x3a, 0x1c,
	0xac, 0x70, 0x0b, 0xf4, 0xce, 0xe6, 0x70, 0x82, 0x5c, 0xa7, 0xfc, 0x60, 0x4b, 0x69, 0x5f, 0x37,
	0xc0, 0x72, 0xb2, 0xa3, 0x7b, 0x9b, 0xd4, 0x7d, 0x0b, 0xa5, 0x5c, 0x8d, 0x17, 0xf4, 0x27, 0xda,
	0x3f, 0x93, 0xa3, 0x12, 0x1d, 0xb2, 0x14, 0xa2, 0x12, 0x1d, 0x36, 0xe2, 0x85, 0xc4, 0xe3, 0x93,
	0x2f, 0xea, 0xe7, 0xaa, 0x75, 0xbe, 0x20, 0x32, 0x9a, 0x31, 0x79, 0xf8, 0xad, 0x72, 0x8e, 0x8d,
	0xc9, 0x4c, 0x9e, 0xcf, 0x1f, 0x92, 0xdf, 0x12, 0xce, 0x17, 0x2f, 0x1f, 0x4c, 0xb4, 0xe0, 0xaf,
	0x0c, 0xe7, 0x2c, 0x79, 0xf5, 0xee, 0xdf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x75, 0xe7, 0xa9, 0x30,
	0x84, 0x18, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TicketServiceClient is the client API for TicketService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TicketServiceClient interface {
	// CRD
	Get(ctx context.Context, in *GetTicketRequest, opts ...grpc.CallOption) (*GetTicketResponse, error)
	Create(ctx context.Context, in *CreateTicketRequest, opts ...grpc.CallOption) (*CreateTicketResponse, error)
	Delete(ctx context.Context, in *DeleteTicketRequest, opts ...grpc.CallOption) (*DeleteTicketResponse, error)
	// List
	List(ctx context.Context, in *ListTicketsRequest, opts ...grpc.CallOption) (*ListTicketsResponse, error)
	// Persons
	SetAssignee(ctx context.Context, in *SetAssigneeRequest, opts ...grpc.CallOption) (*SetAssigneeResponse, error)
	AddPerson(ctx context.Context, in *AddPersonRequest, opts ...grpc.CallOption) (*AddPersonResponse, error)
	RemovePerson(ctx context.Context, in *RemovePersonRequest, opts ...grpc.CallOption) (*RemovePersonResponse, error)
	// Update ticket details
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error)
	UpdateReference(ctx context.Context, in *UpdateReferenceRequest, opts ...grpc.CallOption) (*UpdateReferenceResponse, error)
	UpdateType(ctx context.Context, in *UpdateTypeRequest, opts ...grpc.CallOption) (*UpdateTypeResponse, error)
	UpdateStatus(ctx context.Context, in *UpdateStatusRequest, opts ...grpc.CallOption) (*UpdateStatusResponse, error)
}

type ticketServiceClient struct {
	cc *grpc.ClientConn
}

func NewTicketServiceClient(cc *grpc.ClientConn) TicketServiceClient {
	return &ticketServiceClient{cc}
}

func (c *ticketServiceClient) Get(ctx context.Context, in *GetTicketRequest, opts ...grpc.CallOption) (*GetTicketResponse, error) {
	out := new(GetTicketResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) Create(ctx context.Context, in *CreateTicketRequest, opts ...grpc.CallOption) (*CreateTicketResponse, error) {
	out := new(CreateTicketResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) Delete(ctx context.Context, in *DeleteTicketRequest, opts ...grpc.CallOption) (*DeleteTicketResponse, error) {
	out := new(DeleteTicketResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) List(ctx context.Context, in *ListTicketsRequest, opts ...grpc.CallOption) (*ListTicketsResponse, error) {
	out := new(ListTicketsResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) SetAssignee(ctx context.Context, in *SetAssigneeRequest, opts ...grpc.CallOption) (*SetAssigneeResponse, error) {
	out := new(SetAssigneeResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/SetAssignee", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) AddPerson(ctx context.Context, in *AddPersonRequest, opts ...grpc.CallOption) (*AddPersonResponse, error) {
	out := new(AddPersonResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/AddPerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) RemovePerson(ctx context.Context, in *RemovePersonRequest, opts ...grpc.CallOption) (*RemovePersonResponse, error) {
	out := new(RemovePersonResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/RemovePerson", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error) {
	out := new(CloseResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) UpdateReference(ctx context.Context, in *UpdateReferenceRequest, opts ...grpc.CallOption) (*UpdateReferenceResponse, error) {
	out := new(UpdateReferenceResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/UpdateReference", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) UpdateType(ctx context.Context, in *UpdateTypeRequest, opts ...grpc.CallOption) (*UpdateTypeResponse, error) {
	out := new(UpdateTypeResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/UpdateType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ticketServiceClient) UpdateStatus(ctx context.Context, in *UpdateStatusRequest, opts ...grpc.CallOption) (*UpdateStatusResponse, error) {
	out := new(UpdateStatusResponse)
	err := c.cc.Invoke(ctx, "/coozzy.ticket.ticket.TicketService/UpdateStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TicketServiceServer is the server API for TicketService service.
type TicketServiceServer interface {
	// CRD
	Get(context.Context, *GetTicketRequest) (*GetTicketResponse, error)
	Create(context.Context, *CreateTicketRequest) (*CreateTicketResponse, error)
	Delete(context.Context, *DeleteTicketRequest) (*DeleteTicketResponse, error)
	// List
	List(context.Context, *ListTicketsRequest) (*ListTicketsResponse, error)
	// Persons
	SetAssignee(context.Context, *SetAssigneeRequest) (*SetAssigneeResponse, error)
	AddPerson(context.Context, *AddPersonRequest) (*AddPersonResponse, error)
	RemovePerson(context.Context, *RemovePersonRequest) (*RemovePersonResponse, error)
	// Update ticket details
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Close(context.Context, *CloseRequest) (*CloseResponse, error)
	UpdateReference(context.Context, *UpdateReferenceRequest) (*UpdateReferenceResponse, error)
	UpdateType(context.Context, *UpdateTypeRequest) (*UpdateTypeResponse, error)
	UpdateStatus(context.Context, *UpdateStatusRequest) (*UpdateStatusResponse, error)
}

func RegisterTicketServiceServer(s *grpc.Server, srv TicketServiceServer) {
	s.RegisterService(&_TicketService_serviceDesc, srv)
}

func _TicketService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).Get(ctx, req.(*GetTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).Create(ctx, req.(*CreateTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTicketRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).Delete(ctx, req.(*DeleteTicketRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTicketsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).List(ctx, req.(*ListTicketsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_SetAssignee_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetAssigneeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).SetAssignee(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/SetAssignee",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).SetAssignee(ctx, req.(*SetAssigneeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_AddPerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).AddPerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/AddPerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).AddPerson(ctx, req.(*AddPersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_RemovePerson_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePersonRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).RemovePerson(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/RemovePerson",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).RemovePerson(ctx, req.(*RemovePersonRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_UpdateReference_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateReferenceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).UpdateReference(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/UpdateReference",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).UpdateReference(ctx, req.(*UpdateReferenceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_UpdateType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateTypeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).UpdateType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/UpdateType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).UpdateType(ctx, req.(*UpdateTypeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TicketService_UpdateStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TicketServiceServer).UpdateStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coozzy.ticket.ticket.TicketService/UpdateStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TicketServiceServer).UpdateStatus(ctx, req.(*UpdateStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TicketService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "coozzy.ticket.ticket.TicketService",
	HandlerType: (*TicketServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _TicketService_Get_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _TicketService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _TicketService_Delete_Handler,
		},
		{
			MethodName: "List",
			Handler:    _TicketService_List_Handler,
		},
		{
			MethodName: "SetAssignee",
			Handler:    _TicketService_SetAssignee_Handler,
		},
		{
			MethodName: "AddPerson",
			Handler:    _TicketService_AddPerson_Handler,
		},
		{
			MethodName: "RemovePerson",
			Handler:    _TicketService_RemovePerson_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _TicketService_Update_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _TicketService_Close_Handler,
		},
		{
			MethodName: "UpdateReference",
			Handler:    _TicketService_UpdateReference_Handler,
		},
		{
			MethodName: "UpdateType",
			Handler:    _TicketService_UpdateType_Handler,
		},
		{
			MethodName: "UpdateStatus",
			Handler:    _TicketService_UpdateStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ticket/ticket/ticket.proto",
}
